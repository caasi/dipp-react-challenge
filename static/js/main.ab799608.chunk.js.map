{"version":3,"sources":["App/index.module.scss","components/Task2Page/index.module.scss","components/Task1Page/Weather/index.module.scss","components/Task1Page/Login/index.js","components/Task1Page/WeatherIcon/index.js","components/Task1Page/Weather/index.js","components/Task1Page/WeatherItem/index.js","types/time.js","api/auth.js","api/city.js","api/weather.js","consts.js","components/Task1Page/Forecast/index.js","types/forecast.js","components/Task1Page/AdminPanel/index.js","components/Task1Page/UserPanel/index.js","components/Task1Page/index.js","hooks/use-cities.js","hooks/use-user.js","components/Task2Page/index.js","App/index.js","serviceWorker.js","index.js","components/Task1Page/Login/index.module.scss","components/Task1Page/Forecast/index.module.scss","components/Task1Page/WeatherItem/index.module.scss","components/Task1Page/index.module.scss"],"names":["module","exports","Login","React","memo","id","className","disabled","message","onSubmit","useState","username","setUsername","password","setPassword","cx","styles","evt","preventDefault","htmlFor","value","onChange","target","type","WeatherIcon","icon","main","description","src","alt","Weather","active","data","onClick","dt_txt","temp_min","temp_max","weather","day","moment","format","max_temp","Math","floor","min_temp","map","w","key","temp","max","min","WeatherItem","time","length","delay","t","v","Promise","resolve","setTimeout","users","admin","city","undefined","user","login","store","get","hex","stringify","sha256","then","Error","update","set","list","create","cities","remove","i","findIndex","c","slice","forecast5","axios","params","appid","process","q","units","Forecast","date","setDate","usePromise","useMemo","forecast","isPending","dailyForecast","cnt","group","newList","split","push","F","hourlyForecast","useOptional","timeStr","daily","hourly","item","AdminPanel","useCitiesContext","newCity","setNewCity","UserPanel","useUserContext","setCity","href","constate","setCities","useCallback","cityName","result","useEffect","CitiesProvider","setUser","auth","UserProvider","Task1Page","pUser","userError","isUserPending","Task2Page","App","basename","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ab799608.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"className\":\"App_className__XlKPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"className\":\"Task2Page_className__164pR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"className\":\"Weather_className__10LuG\",\"day\":\"Weather_day__1xg-O\",\"icon\":\"Weather_icon__3_CcN\",\"temp\":\"Weather_temp__3aKqe\",\"max\":\"Weather_max__2bzGm\",\"min\":\"Weather_min__2Tm7w\"};","import React, { useState } from 'react';\nimport cx from 'classnames';\nimport styles from './index.module.scss';\n\nconst Login = React.memo(({\n  id,\n  className,\n  disabled = false,\n  message = '',\n  onSubmit,\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <form\n      id={id}\n      className={cx(styles.className, className)}\n      onSubmit={(evt) => {\n        evt.preventDefault();\n        if (typeof onSubmit === 'function') {\n          onSubmit(evt, username, password);\n        }\n      }}\n    >\n      <div className={styles.username}>\n        <label htmlFor=\"login-username\">username</label>\n        <input\n          id=\"login-username\"\n          value={username}\n          onChange={(evt) => setUsername(evt.target.value)}\n        />\n      </div>\n      <div className={styles.password}>\n        <label htmlFor=\"login-password\">password</label>\n        <input\n          id=\"login-password\"\n          type=\"password\"\n          value={password}\n          onChange={(evt) => setPassword(evt.target.value)}\n        />\n      </div>\n      <button disabled={disabled} type=\"submit\">\n        Login\n      </button>\n      {message &&\n        <p className={styles.message}>{message}</p>\n      }\n    </form>\n  );\n});\n\nexport default Login;\n","import React from 'react';\nimport cx from 'classnames';\nimport styles from './index.module.scss';\n\nconst ICON_BASE = 'http://openweathermap.org/img/w/';\n\nconst WeatherIcon = React.memo(({\n  id,\n  className,\n  icon = '',\n  main = '',\n  description = '',\n}) => {\n  return (\n    <div className={cx(styles.className, className)}>\n      <img src={`${ICON_BASE}${icon}.png`} alt={`${main} - ${description}`} />\n    </div>\n  );\n});\n\nexport default WeatherIcon;\n","import React from 'react';\nimport cx from 'classnames';\nimport styles from './index.module.scss';\nimport moment from 'moment';\nimport WeatherIcon from '../WeatherIcon';\n\nconst Weather = React.memo(({\n  id,\n  className,\n  active,\n  data,\n  onClick,\n}) => {\n  const { dt_txt, main: { temp_min, temp_max } = {}, weather = [] } = data;\n  const day = moment(dt_txt).format('ddd');\n  const max_temp = Math.floor(temp_max);\n  const min_temp = Math.floor(temp_min);\n\n  return (\n    <div\n      className={cx(styles.className, className, { active })}\n      onClick={onClick}\n    >\n      <span className={styles.day}>{day}</span>\n      {weather.map(w =>\n        <WeatherIcon key={w.id} className={styles.icon} {...w} />\n      )}\n      <div className={styles.temp}>\n        <span className={styles.max}>{max_temp}°</span>\n        <span className={styles.min}>{min_temp}°</span>\n      </div>\n    </div>\n  );\n});\n\nexport default Weather;\n","import React from 'react';\nimport cx from 'classnames';\nimport styles from './index.module.scss';\n\nconst WeatherItem = React.memo(({ id, className, data = {} }) => {\n  const { main: { temp_max, temp_min } = {}, weather = [] } = data;\n  const max_temp = Math.floor(temp_max);\n  const min_temp = Math.floor(temp_min);\n\n  return (\n    <div id={id} className={cx(styles.className, className)}>\n      <div className={styles.time}>{data.dt_txt}</div>\n      <div className={styles.temp}>{min_temp}° ~ {max_temp}°</div>\n      <div className={styles.description}>\n        {weather && weather.length !== 0 && weather[0].description}\n      </div>\n    </div>\n  );\n});\n\nexport default WeatherItem;\n","export const delay = (t) => (v) =>\n  new Promise((resolve) => setTimeout(resolve, t, v));\n","import store from 'store';\nimport sha256 from 'crypto-js/sha256';\nimport hex from 'crypto-js/enc-hex';\nimport { delay } from '../types/time';\n\n// mock the database\nconst users = {\n  admin: {\n    username: 'admin',\n    // 'password'\n    password: '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8',\n    city: undefined,\n  },\n  user: {\n    username: 'user',\n    // 'foobar'\n    password: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2',\n    city: undefined,\n  },\n};\n\nconst currentUsers = store.get('users');\nif (!currentUsers) {\n  store.set('users', users);\n}\n\nexport function login(username, password) {\n  const users = store.get('users');\n  const user = users[username] || {};\n\n  if (hex.stringify(sha256(password)) === user.password) {\n    return Promise\n      .resolve(user)\n      .then(delay(1000));\n  } else {\n    return Promise\n      .resolve()\n      .then(delay(3000))\n      .then(() => {\n        throw new Error('invalid password');\n      });\n  }\n}\n\nexport function get(username) {\n  const users = store.get('users');\n  const user = users[username];\n\n  if (user) {\n    return Promise\n      .resolve(user)\n      .then(delay(1000));\n  } else {\n    return Promise\n      .resolve()\n      .then(delay(3000))\n      .then(() => {\n        throw new Error('user not found');\n      });\n  }\n}\n\nexport function update(username, user) {\n  const users = store.get('users');\n\n  if (users[username]) {\n    store.set(\n      'users',\n      {\n        ...users,\n        [username]: user,\n      },\n    );\n\n    return Promise\n      .resolve(user)\n      .then(delay(1000));\n  } else {\n    return Promise\n      .resolve()\n      .then(delay(3000))\n      .then(() => {\n        throw new Error('user not found');\n      });\n  }\n}\n","import store from 'store';\nimport { delay } from '../types/time';\n\nconst cities = [\n  'Mexico',\n  'Shanghai',\n  'Tokyo',\n  'London',\n  'New York',\n];\n\nconst currentCities = store.get('cities');\nif (!currentCities) {\n  store.set('cities', cities);\n}\n\nexport function list() {\n  return Promise\n    .resolve(store.get('cities'))\n    .then(delay(1000));\n}\n\nexport function create(city) {\n  const cities = [\n    city,\n    ...store.get('cities'),\n  ];\n\n  store.set('cities', cities);\n\n  return Promise\n    .resolve(cities)\n    .then(delay(1000));\n}\n\nexport function remove(city) {\n  let cities = store.get('cities');\n  const i = cities.findIndex((c) => c === city);\n\n  if (i !== -1) {\n    cities = [\n      ...cities.slice(0, i),\n      ...cities.slice(i + 1),\n    ];\n    store.set('cities', cities);\n  }\n\n  return Promise\n    .resolve(cities)\n    .then(delay(1000));\n}\n","import axios from 'axios';\nimport { OWM_KEY } from '../consts';\n\nexport function forecast5(city) {\n  return axios\n    .get(\n      '//api.openweathermap.org/data/2.5/forecast',\n      { params: { appid: OWM_KEY, q: city, units: 'imperial' } },\n    )\n    .then(({ data }) => data);\n}\n","export const OWM_KEY = process.env.REACT_APP_OWM_KEY || '';\n","import React, { useMemo, useState } from 'react';\nimport styles from './index.module.scss';\nimport Weather from '../Weather';\nimport WeatherItem from '../WeatherItem';\nimport { usePromise, useOptional } from '@hereticaljs/hooks';\nimport * as F from '../../../types/forecast';\nimport { weather } from '../../../api';\n\nconst Forecast = React.memo(({ city }) => {\n  const [date, setDate] = useState();\n  const [forecast = { list: [] },, isPending] =\n    usePromise(useMemo(() => weather.forecast5(city), [city]));\n  const dailyForecast = useMemo(\n    () => F.filterByDate(forecast),\n    [forecast],\n  );\n  const hourlyForecast = useOptional(\n    [date],\n    (date) => F.filterToDate(forecast, date),\n  );\n\n  return (\n    <div className={styles.className}>\n      {isPending\n        ? <span>loading...</span>\n        : (\n          <ol className={styles.daily}>\n            {dailyForecast.list.map(data =>\n              <li key={data.dt_txt}>\n                <Weather\n                  active={data.dt_txt === date}\n                  data={data}\n                  onClick={() => setDate(data.dt_txt)}\n                />\n              </li>\n            )}\n          </ol>\n        )\n      }\n      {hourlyForecast &&\n        <ol className={styles.hourly}>\n          {hourlyForecast.list.map(data =>\n            <li key={data.dt_txt}>\n              <WeatherItem className={styles.item} data={data} />\n            </li>\n          )}\n        </ol>\n      }\n    </div>\n  );\n});\n\nexport default Forecast;\n","export function filterByDate(forecast) {\n  const { list = [] } = forecast;\n\n  let cnt = 0;\n  let group = {};\n  let newList = [];\n  for (let weather of list) {\n    const [date] = weather.dt_txt.split(' ');\n    if (!group[date] && cnt < 5) {\n      group[date] = true;\n      newList.push(weather);\n      cnt += 1;\n    }\n  }\n\n  return {\n    ...forecast,\n    cnt: newList.length,\n    list: newList,\n  };\n}\n\nexport function filterToDate(forecast, timeStr) {\n  const { list = [] } = forecast;\n  const [date] = timeStr.split(' ');\n\n  let newList = [];\n  for (let weather of list) {\n    const [_date] = weather.dt_txt.split(' ');\n    if (_date === date) {\n      newList.push(weather);\n    }\n  }\n\n  return {\n    ...forecast,\n    cnt: newList.length,\n    list: newList,\n  };\n}\n","import React, { useState } from 'react';\nimport cx from 'classnames';\nimport styles from './index.module.scss';\nimport { useCitiesContext } from '../';\nimport Forecast from '../Forecast';\n\nconst AdminPanel = React.memo(({ id, className }) => {\n  const store = useCitiesContext();\n  const [newCity, setNewCity] = useState('');\n\n  return (\n    <div id={id} className={cx(styles.className, className)}>\n      <h1>Admin Panel</h1>\n      <form\n        onSubmit={(evt) => {\n          evt.preventDefault();\n          store.create(newCity);\n          setNewCity('');\n        }}\n      >\n        <input\n          value={newCity}\n          onChange={(evt) => setNewCity(evt.target.value)}\n        />\n        <button type=\"submit\">add city</button>\n      </form>\n      <hr />\n      {store.cities.map((city) =>\n        <section key={city}>\n          <h2>{city}</h2>\n          <button onClick={() => store.remove(city)}>\n            remove\n          </button>\n          <Forecast city={city} />\n        </section>\n      )}\n    </div>\n  );\n});\n\nexport default AdminPanel;\n","import React from 'react';\nimport cx from 'classnames';\nimport styles from './index.module.scss';\nimport Forecast from '../Forecast';\nimport { useCitiesContext, useUserContext } from '../';\n\nconst UserPanel = React.memo(({ id, className }) => {\n  const store = useCitiesContext();\n  const user = useUserContext();\n\n  return (\n    <div id={id} className={cx(styles.className, className)}>\n      <h1>User Panel</h1>\n      <ul>\n        <li>username: {user.username}</li>\n        <li>my city: {user.city}</li>\n      </ul>\n      <hr />\n      <h2>Cities</h2>\n      <ul>\n        {store.cities.map(city =>\n          <li key={city} onClick={() => user.setCity(city)}>\n            <a href={`#${city}`}>{city}</a>\n          </li>\n        )}\n      </ul>\n      <hr />\n      {user.city &&\n        <section>\n          <h2>{user.city}</h2>\n          <Forecast key={user.city} city={user.city} />\n        </section>\n      }\n    </div>\n  );\n});\n\nexport default UserPanel;\n","import React, { useState } from 'react';\nimport styles from './index.module.scss';\nimport constate from 'constate';\nimport Login from './Login';\nimport AdminPanel from './AdminPanel';\nimport UserPanel from './UserPanel';\nimport { usePromise } from '@hereticaljs/hooks';\nimport { auth } from '../../api';\nimport { useCities, useUser } from '../../hooks';\n\nconst [CitiesProvider, useCitiesContext] = constate(useCities);\nconst [UserProvider, useUserContext] = constate(useUser);\n\nexport { useCitiesContext, useUserContext };\n\nexport default function Task1Page({ id }) {\n  const [pUser, setUser] = useState();\n  const [user, userError, isUserPending] = usePromise(pUser);\n\n  return (\n    <div id={id} className={styles.className}>\n      <CitiesProvider>\n        {!user &&\n          <div className={styles.login}>\n            <Login\n              disabled={isUserPending}\n              message={userError && userError.message}\n              onSubmit={(evt, username, password) => {\n                setUser(auth.login(username, password));\n              }}\n            />\n          </div>\n        }\n        {user\n          ? user.username === 'admin'\n            ? <AdminPanel />\n            : (\n              <UserProvider username={user.username}>\n                <UserPanel />\n              </UserProvider>\n            )\n          : null\n        }\n      </CitiesProvider>\n    </div>\n  );\n}\n","import { useState, useCallback, useEffect } from 'react';\nimport { city } from '../api';\n\nexport default function useCities() {\n  const [cities, setCities] = useState([]);\n\n  const create = useCallback((cityName) => {\n    city.create(cityName).then(result => setCities(result));\n  }, []);\n\n  const remove = useCallback((cityName) => {\n    city.remove(cityName).then(result => setCities(result));\n  }, []);\n\n  useEffect(() => {\n    city.list().then(result => setCities(result));\n  }, []);\n\n  return {\n    cities,\n    create,\n    remove,\n  };\n}\n","import { useState, useCallback, useEffect } from 'react';\nimport { auth } from '../api';\n\nexport default function useUser({ username }) {\n  const [user, setUser] = useState();\n\n  const setCity = useCallback((city) => {\n    auth.update(username, { ...user, city })\n      .then(user => setUser(user));\n  }, [username, user]);\n\n  useEffect(() => {\n    if (!username) return;\n    auth.get(username)\n      .then(user => setUser(user));\n  }, [username]);\n\n  return {\n    ...user,\n    setCity,\n  }\n}\n","import React from 'react';\nimport styles from './index.module.scss';\n\nexport default function Task2Page({ id }) {\n  return (\n    <div id={id} className={styles.className}>\n      the task 2 page\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './index.module.scss';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Task1Page from '../components/Task1Page';\nimport Task2Page from '../components/Task2Page';\n\nfunction App({ id }) {\n  return (\n    <Router basename=\"dipp-react-challenge\">\n      <div id={id} className={styles.className}>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/task1\">Task 1</Link>\n            </li>\n            <li>\n              <Link to=\"/task2\">Task 2</Link>\n            </li>\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            <Route path=\"/task1\">\n              <Task1Page />\n            </Route>\n            <Route path=\"/task2\">\n              <Task2Page />\n            </Route>\n            <Redirect to=\"/task1\" />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"className\":\"Login_className__1EyjJ\",\"username\":\"Login_username__2ar3h\",\"password\":\"Login_password__3SZDG\",\"message\":\"Login_message__CMXU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"className\":\"Forecast_className__2gNKt\",\"daily\":\"Forecast_daily__Qge9c\",\"hourly\":\"Forecast_hourly__3rkP7\",\"item\":\"Forecast_item__14So_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"className\":\"WeatherItem_className__237QL\",\"time\":\"WeatherItem_time__3ktc9\",\"temp\":\"WeatherItem_temp__2uNjp\",\"description\":\"WeatherItem_description__OnIu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"className\":\"Task1Page_className__3HFGF\",\"login\":\"Task1Page_login__3-Yu6\"};"],"sourceRoot":""}